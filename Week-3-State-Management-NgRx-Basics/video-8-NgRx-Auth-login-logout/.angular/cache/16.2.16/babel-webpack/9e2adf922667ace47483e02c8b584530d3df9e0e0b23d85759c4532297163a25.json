{"ast":null,"code":"import { debounceTime, map, of, switchMap } from \"rxjs\";\nexport function usernameValidator(authService) {\n  return control => {\n    if (!control.value) return of(null);\n    return of(control.value).pipe(debounceTime(500), switchMap(username => authService.checkUsername(username)), map(isTaken => isTaken ? {\n      userNameTaken: true\n    } : null));\n  };\n}","map":{"version":3,"names":["debounceTime","map","of","switchMap","usernameValidator","authService","control","value","pipe","username","checkUsername","isTaken","userNameTaken"],"sources":["/Users/abhimanyusinghshaktawat/Desktop/advanced-component-demo/Week-3-State-Management-NgRx-Basics/video-7-State-Management-RxJs-Ngrx-Intro/src/app/validators/username.validator.ts"],"sourcesContent":["import { AbstractControl, AsyncValidatorFn } from \"@angular/forms\";\nimport { AuthServiceService } from \"../services/auth.service.service\";\nimport { debounce, debounceTime, map, Observable, of, switchMap } from \"rxjs\";\n\nexport function usernameValidator(authService : AuthServiceService) : AsyncValidatorFn{\n    return (control : AbstractControl) : Observable<{userNameTaken : boolean} | null> => {\n        if(!control.value) return of(null);\n\n        return of(control.value).pipe(\n            debounceTime(500),\n            switchMap(username => authService.checkUsername(username)),\n            map(isTaken => (isTaken ? {userNameTaken : true} : null))\n        );\n    };\n}"],"mappings":"AAEA,SAAmBA,YAAY,EAAEC,GAAG,EAAcC,EAAE,EAAEC,SAAS,QAAQ,MAAM;AAE7E,OAAM,SAAUC,iBAAiBA,CAACC,WAAgC;EAC9D,OAAQC,OAAyB,IAAmD;IAChF,IAAG,CAACA,OAAO,CAACC,KAAK,EAAE,OAAOL,EAAE,CAAC,IAAI,CAAC;IAElC,OAAOA,EAAE,CAACI,OAAO,CAACC,KAAK,CAAC,CAACC,IAAI,CACzBR,YAAY,CAAC,GAAG,CAAC,EACjBG,SAAS,CAACM,QAAQ,IAAIJ,WAAW,CAACK,aAAa,CAACD,QAAQ,CAAC,CAAC,EAC1DR,GAAG,CAACU,OAAO,IAAKA,OAAO,GAAG;MAACC,aAAa,EAAG;IAAI,CAAC,GAAG,IAAK,CAAC,CAC5D;EACL,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}