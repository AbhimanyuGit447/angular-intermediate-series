{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { selectAllTasks, selectIcompleteTasksCount } from './task-store/task.selectors';\nimport { addTask, removeTask, toggleTaskCompletion } from './task-store/task.actions';\nexport let AppComponent = class AppComponent {\n  constructor(store) {\n    this.store = store;\n    this.newTaskDescription = '';\n    this.allTasks$ = this.store.select(selectAllTasks);\n    this.incompleteTasksCount$ = this.store.select(selectIcompleteTasksCount);\n  }\n  addTask() {\n    const newTask = {\n      id: Date.now().toString(),\n      description: this.newTaskDescription,\n      completed: false\n    };\n    this.store.dispatch(addTask({\n      task: newTask\n    }));\n    this.newTaskDescription = '';\n  }\n  removeTask(taskId) {\n    this.store.dispatch(removeTask({\n      taskId\n    }));\n  }\n  toggleCompletion(taskId) {\n    this.store.dispatch(toggleTaskCompletion({\n      taskId\n    }));\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})], AppComponent);","map":{"version":3,"names":["Component","selectAllTasks","selectIcompleteTasksCount","addTask","removeTask","toggleTaskCompletion","AppComponent","constructor","store","newTaskDescription","allTasks$","select","incompleteTasksCount$","newTask","id","Date","now","toString","description","completed","dispatch","task","taskId","toggleCompletion","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/abhimanyusinghshaktawat/Desktop/advanced-component-demo/Week-3-State-Management-NgRx-Basics/video-7-State-Management-RxJs-Ngrx-Intro/src/app/app.component.ts"],"sourcesContent":["import { AfterViewInit, Component, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\nimport { NotificationService } from './services/notification.service';\nimport { SurveyServiceService } from './services/survey-service.service';\nimport { Observable } from 'rxjs';\nimport { Task } from './models/task.model';\nimport { Store } from '@ngrx/store';\nimport { selectAllTasks, selectIcompleteTasksCount } from './task-store/task.selectors';\nimport { addTask, removeTask, toggleTaskCompletion } from './task-store/task.actions';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  newTaskDescription = '';\n  \n  allTasks$ : Observable<Task[]>;\n  incompleteTasksCount$ : Observable<number>;\n\n  constructor(private store : Store){\n    this.allTasks$ = this.store.select(selectAllTasks);\n    this.incompleteTasksCount$ = this.store.select(selectIcompleteTasksCount);\n  }\n\n  addTask(){\n    const newTask : Task = {\n      id : Date.now().toString(),\n      description : this.newTaskDescription,\n      completed : false\n    }\n    this.store.dispatch(addTask({task : newTask}));\n    this.newTaskDescription = '';\n  }\n\n  removeTask(taskId : string){\n    this.store.dispatch(removeTask({taskId}));\n  }\n\n  toggleCompletion(taskId : string){\n    this.store.dispatch(toggleTaskCompletion({taskId}))\n  }\n\n}\n\n\n"],"mappings":";AAAA,SAAwBA,SAAS,QAA6C,eAAe;AAM7F,SAASC,cAAc,EAAEC,yBAAyB,QAAQ,6BAA6B;AACvF,SAASC,OAAO,EAAEC,UAAU,EAAEC,oBAAoB,QAAQ,2BAA2B;AAO9E,WAAMC,YAAY,GAAlB,MAAMA,YAAY;EAOvBC,YAAoBC,KAAa;IAAb,KAAAA,KAAK,GAALA,KAAK;IALzB,KAAAC,kBAAkB,GAAG,EAAE;IAMrB,IAAI,CAACC,SAAS,GAAG,IAAI,CAACF,KAAK,CAACG,MAAM,CAACV,cAAc,CAAC;IAClD,IAAI,CAACW,qBAAqB,GAAG,IAAI,CAACJ,KAAK,CAACG,MAAM,CAACT,yBAAyB,CAAC;EAC3E;EAEAC,OAAOA,CAAA;IACL,MAAMU,OAAO,GAAU;MACrBC,EAAE,EAAGC,IAAI,CAACC,GAAG,EAAE,CAACC,QAAQ,EAAE;MAC1BC,WAAW,EAAG,IAAI,CAACT,kBAAkB;MACrCU,SAAS,EAAG;KACb;IACD,IAAI,CAACX,KAAK,CAACY,QAAQ,CAACjB,OAAO,CAAC;MAACkB,IAAI,EAAGR;IAAO,CAAC,CAAC,CAAC;IAC9C,IAAI,CAACJ,kBAAkB,GAAG,EAAE;EAC9B;EAEAL,UAAUA,CAACkB,MAAe;IACxB,IAAI,CAACd,KAAK,CAACY,QAAQ,CAAChB,UAAU,CAAC;MAACkB;IAAM,CAAC,CAAC,CAAC;EAC3C;EAEAC,gBAAgBA,CAACD,MAAe;IAC9B,IAAI,CAACd,KAAK,CAACY,QAAQ,CAACf,oBAAoB,CAAC;MAACiB;IAAM,CAAC,CAAC,CAAC;EACrD;CAED;AA9BYhB,YAAY,GAAAkB,UAAA,EALxBxB,SAAS,CAAC;EACTyB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EACWrB,YAAY,CA8BxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}