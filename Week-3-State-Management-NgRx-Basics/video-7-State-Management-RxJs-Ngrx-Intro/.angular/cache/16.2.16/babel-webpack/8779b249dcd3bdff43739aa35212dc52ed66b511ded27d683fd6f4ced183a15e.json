{"ast":null,"code":"import { selectAllTasks, selectIcompleteTasksCount } from './task-store/task.selectors';\nimport { addTask, removeTask, toggleTaskCompletion } from './task-store/task.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"./components/registration-form/registration-form.component\";\nexport class AppComponent {\n  constructor(store) {\n    this.store = store;\n    this.newTaskDescription = '';\n    this.allTasks$ = this.store.select(selectAllTasks);\n    this.incompleteTasksCount$ = this.store.select(selectIcompleteTasksCount);\n  }\n  addTask() {\n    const newTask = {\n      id: Date.now().toString(),\n      description: this.newTaskDescription,\n      completed: false\n    };\n    this.store.dispatch(addTask({\n      task: newTask\n    }));\n    this.newTaskDescription = '';\n  }\n  removeTask(taskId) {\n    this.store.dispatch(removeTask({\n      taskId\n    }));\n  }\n  toggleCompletion(taskId) {\n    this.store.dispatch(toggleTaskCompletion());\n  }\n  static {\n    this.ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.Store));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      decls: 2,\n      vars: 0,\n      consts: [[1, \"dynamic-form\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵelement(1, \"app-registration-form\");\n          i0.ɵɵelementEnd();\n        }\n      },\n      dependencies: [i2.RegistrationFormComponent],\n      styles: [\".dynamic-form[_ngcontent-%COMP%] {\\n  padding: 2rem;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLmR5bmFtaWMtZm9ybXtcbiAgICBwYWRkaW5nOiAycmVtO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["selectAllTasks","selectIcompleteTasksCount","addTask","removeTask","toggleTaskCompletion","AppComponent","constructor","store","newTaskDescription","allTasks$","select","incompleteTasksCount$","newTask","id","Date","now","toString","description","completed","dispatch","task","taskId","toggleCompletion","i0","ɵɵdirectiveInject","i1","Store","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd"],"sources":["/Users/abhimanyusinghshaktawat/Desktop/advanced-component-demo/Week-3-State-Management-NgRx-Basics/video-7-State-Management-RxJs-Ngrx-Intro/src/app/app.component.ts","/Users/abhimanyusinghshaktawat/Desktop/advanced-component-demo/Week-3-State-Management-NgRx-Basics/video-7-State-Management-RxJs-Ngrx-Intro/src/app/app.component.html"],"sourcesContent":["import { AfterViewInit, Component, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\nimport { NotificationService } from './services/notification.service';\nimport { SurveyServiceService } from './services/survey-service.service';\nimport { Observable } from 'rxjs';\nimport { Task } from './models/task.model';\nimport { Store } from '@ngrx/store';\nimport { selectAllTasks, selectIcompleteTasksCount } from './task-store/task.selectors';\nimport { addTask, removeTask, toggleTaskCompletion } from './task-store/task.actions';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  newTaskDescription = '';\n  \n  allTasks$ : Observable<Task[]>;\n  incompleteTasksCount$ : Observable<number>;\n\n  constructor(private store : Store){\n    this.allTasks$ = this.store.select(selectAllTasks);\n    this.incompleteTasksCount$ = this.store.select(selectIcompleteTasksCount);\n  }\n\n  addTask(){\n    const newTask : Task = {\n      id : Date.now().toString(),\n      description : this.newTaskDescription,\n      completed : false\n    }\n    this.store.dispatch(addTask({task : newTask}));\n    this.newTaskDescription = '';\n  }\n\n  removeTask(taskId : string){\n    this.store.dispatch(removeTask({taskId}));\n  }\n\n  toggleCompletion(taskId : string){\n    this.store.dispatch(toggleTaskCompletion())\n  }\n\n}\n\n\n","<!-- \n\n<button (click)=\"loadTextQuestion()\"  >Load text Question</button>\n<button (click)=\"loadMultipleChoice()\">Load Multiple Choice</button>\n<button (click)=\"loadDropdown()\">Load Dropdown</button>\n\n<ng-template #surveyContainer></ng-template> -->\n\n<!-- <app-signup></app-signup> -->\n\n    <!-- <div class=\"dynamic-form\">\n        <app-dynamic-form></app-dynamic-form>\n    </div> -->\n\n    <div class=\"dynamic-form\">\n        <app-registration-form></app-registration-form>\n    </div>\n  \n\n\n\n\n<!-- <app-notification></app-notification>\n\n<app-task></app-task>\n\n<app-parent></app-parent>\n\n<app-sibling></app-sibling> -->\n"],"mappings":"AAMA,SAASA,cAAc,EAAEC,yBAAyB,QAAQ,6BAA6B;AACvF,SAASC,OAAO,EAAEC,UAAU,EAAEC,oBAAoB,QAAQ,2BAA2B;;;;AAOrF,OAAM,MAAOC,YAAY;EAOvBC,YAAoBC,KAAa;IAAb,KAAAA,KAAK,GAALA,KAAK;IALzB,KAAAC,kBAAkB,GAAG,EAAE;IAMrB,IAAI,CAACC,SAAS,GAAG,IAAI,CAACF,KAAK,CAACG,MAAM,CAACV,cAAc,CAAC;IAClD,IAAI,CAACW,qBAAqB,GAAG,IAAI,CAACJ,KAAK,CAACG,MAAM,CAACT,yBAAyB,CAAC;EAC3E;EAEAC,OAAOA,CAAA;IACL,MAAMU,OAAO,GAAU;MACrBC,EAAE,EAAGC,IAAI,CAACC,GAAG,EAAE,CAACC,QAAQ,EAAE;MAC1BC,WAAW,EAAG,IAAI,CAACT,kBAAkB;MACrCU,SAAS,EAAG;KACb;IACD,IAAI,CAACX,KAAK,CAACY,QAAQ,CAACjB,OAAO,CAAC;MAACkB,IAAI,EAAGR;IAAO,CAAC,CAAC,CAAC;IAC9C,IAAI,CAACJ,kBAAkB,GAAG,EAAE;EAC9B;EAEAL,UAAUA,CAACkB,MAAe;IACxB,IAAI,CAACd,KAAK,CAACY,QAAQ,CAAChB,UAAU,CAAC;MAACkB;IAAM,CAAC,CAAC,CAAC;EAC3C;EAEAC,gBAAgBA,CAACD,MAAe;IAC9B,IAAI,CAACd,KAAK,CAACY,QAAQ,CAACf,oBAAoB,EAAE,CAAC;EAC7C;;;uBA5BWC,YAAY,EAAAkB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,KAAA;IAAA;EAAA;;;YAAZrB,YAAY;MAAAsB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCArBV,EAAA,CAAAY,cAAA,aAA0B;UACtBZ,EAAA,CAAAa,SAAA,4BAA+C;UACnDb,EAAA,CAAAc,YAAA,EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}