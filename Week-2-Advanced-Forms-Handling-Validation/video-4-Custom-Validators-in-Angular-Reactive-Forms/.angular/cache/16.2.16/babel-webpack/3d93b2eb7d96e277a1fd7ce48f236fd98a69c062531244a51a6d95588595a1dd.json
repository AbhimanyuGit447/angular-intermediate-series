{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { emailValidator } from 'src/app/validators/email.validator';\nimport { strongPasswordValidator } from 'src/app/validators/password.validator';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/auth.service.service\";\nimport * as i3 from \"@angular/common\";\nfunction SignupComponent_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Email is already taken!\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class SignupComponent {\n  constructor(fb, authService) {\n    this.fb = fb;\n    this.authService = authService;\n    this.signupForm = this.fb.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email], [emailValidator(authService)]],\n      password: ['', [Validators.required, Validators.minLength(6), strongPasswordValidator]]\n    });\n  }\n  a() {\n    console.log(this.signupForm.get('email')?.errors);\n  }\n  onSubmit() {\n    if (this.signupForm.valid) {\n      console.log('Form Submitted', this.signupForm.value);\n    }\n  }\n  static {\n    this.ɵfac = function SignupComponent_Factory(t) {\n      return new (t || SignupComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthServiceService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SignupComponent,\n      selectors: [[\"app-signup\"]],\n      decls: 13,\n      vars: 3,\n      consts: [[3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"formControlName\", \"name\"], [\"type\", \"email\", \"formControlName\", \"email\"], [4, \"ngIf\"], [\"type\", \"password\", \"formControlName\", \"password\"], [\"type\", \"submit\", 3, \"disabled\"]],\n      template: function SignupComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function SignupComponent_Template_form_ngSubmit_0_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(1, \"label\");\n          i0.ɵɵtext(2, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(3, \"input\", 1);\n          i0.ɵɵelementStart(4, \"label\");\n          i0.ɵɵtext(5, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(6, \"input\", 2);\n          i0.ɵɵtemplate(7, SignupComponent_span_7_Template, 2, 0, \"span\", 3);\n          i0.ɵɵelementStart(8, \"label\");\n          i0.ɵɵtext(9, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(10, \"input\", 4);\n          i0.ɵɵelementStart(11, \"button\", 5);\n          i0.ɵɵtext(12, \" Sign Up \");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"formGroup\", ctx.signupForm);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngIf\", ctx.signupForm);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"disabled\", ctx.signupForm.invalid);\n        }\n      },\n      dependencies: [i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","emailValidator","strongPasswordValidator","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","SignupComponent","constructor","fb","authService","signupForm","group","name","required","email","password","minLength","a","console","log","get","errors","onSubmit","valid","value","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthServiceService","selectors","decls","vars","consts","template","SignupComponent_Template","rf","ctx","ɵɵlistener","SignupComponent_Template_form_ngSubmit_0_listener","ɵɵelement","ɵɵtemplate","SignupComponent_span_7_Template","ɵɵproperty","ɵɵadvance","invalid"],"sources":["/Users/abhimanyusinghshaktawat/Desktop/advanced-component-demo/Week-2-Advanced-Forms-Handling-Validation/video-4-Custom-Validators-in-Angular-Reactive-Forms/src/app/components/signup/signup.component.ts","/Users/abhimanyusinghshaktawat/Desktop/advanced-component-demo/Week-2-Advanced-Forms-Handling-Validation/video-4-Custom-Validators-in-Angular-Reactive-Forms/src/app/components/signup/signup.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthServiceService } from 'src/app/services/auth.service.service';\nimport { emailValidator } from 'src/app/validators/email.validator';\nimport { strongPasswordValidator } from 'src/app/validators/password.validator';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent {\n  signupForm! : FormGroup;\n\n  constructor(private fb : FormBuilder, private authService : AuthServiceService){\n    this.signupForm = this.fb.group({\n      name : ['', Validators.required],\n      email : ['', [Validators.required, Validators.email], [emailValidator(authService)] ],\n      password : ['', [Validators.required, Validators.minLength(6), strongPasswordValidator]]\n    })\n  }\n\n  a(){\n    console.log(this.signupForm.get('email')?.errors);\n  }\n  \n  onSubmit(){\n    if(this.signupForm.valid){\n      console.log('Form Submitted', this.signupForm.value);\n      \n    }\n  }\n}\n","<form [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\">\n    <label>Name</label>\n    <input type=\"text\" formControlName=\"name\" >\n\n    <label>Email</label>\n    <input type=\"email\" formControlName=\"email\">\n    <span *ngIf=\"signupForm\" >Email is already taken!</span>\n\n    <label>Password</label>\n    <input type=\"password\" formControlName=\"password\">\n\n   <button type=\"submit\" [disabled]=\"signupForm.invalid\" >\n    Sign Up\n   </button>\n\n</form>"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;AAEnE,SAASC,cAAc,QAAQ,oCAAoC;AACnE,SAASC,uBAAuB,QAAQ,uCAAuC;;;;;;;ICE3EC,EAAA,CAAAC,cAAA,WAA0B;IAAAD,EAAA,CAAAE,MAAA,8BAAuB;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;ADK5D,OAAM,MAAOC,eAAe;EAG1BC,YAAoBC,EAAgB,EAAUC,WAAgC;IAA1D,KAAAD,EAAE,GAAFA,EAAE;IAAwB,KAAAC,WAAW,GAAXA,WAAW;IACvD,IAAI,CAACC,UAAU,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC9BC,IAAI,EAAG,CAAC,EAAE,EAAEb,UAAU,CAACc,QAAQ,CAAC;MAChCC,KAAK,EAAG,CAAC,EAAE,EAAE,CAACf,UAAU,CAACc,QAAQ,EAAEd,UAAU,CAACe,KAAK,CAAC,EAAE,CAACd,cAAc,CAACS,WAAW,CAAC,CAAC,CAAE;MACrFM,QAAQ,EAAG,CAAC,EAAE,EAAE,CAAChB,UAAU,CAACc,QAAQ,EAAEd,UAAU,CAACiB,SAAS,CAAC,CAAC,CAAC,EAAEf,uBAAuB,CAAC;KACxF,CAAC;EACJ;EAEAgB,CAACA,CAAA;IACCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,UAAU,CAACU,GAAG,CAAC,OAAO,CAAC,EAAEC,MAAM,CAAC;EACnD;EAEAC,QAAQA,CAAA;IACN,IAAG,IAAI,CAACZ,UAAU,CAACa,KAAK,EAAC;MACvBL,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAACT,UAAU,CAACc,KAAK,CAAC;;EAGxD;;;uBApBWlB,eAAe,EAAAJ,EAAA,CAAAuB,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAzB,EAAA,CAAAuB,iBAAA,CAAAG,EAAA,CAAAC,kBAAA;IAAA;EAAA;;;YAAfvB,eAAe;MAAAwB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCX5BlC,EAAA,CAAAC,cAAA,cAAuD;UAAxBD,EAAA,CAAAoC,UAAA,sBAAAC,kDAAA;YAAA,OAAYF,GAAA,CAAAf,QAAA,EAAU;UAAA,EAAC;UAClDpB,EAAA,CAAAC,cAAA,YAAO;UAAAD,EAAA,CAAAE,MAAA,WAAI;UAAAF,EAAA,CAAAG,YAAA,EAAQ;UACnBH,EAAA,CAAAsC,SAAA,eAA2C;UAE3CtC,EAAA,CAAAC,cAAA,YAAO;UAAAD,EAAA,CAAAE,MAAA,YAAK;UAAAF,EAAA,CAAAG,YAAA,EAAQ;UACpBH,EAAA,CAAAsC,SAAA,eAA4C;UAC5CtC,EAAA,CAAAuC,UAAA,IAAAC,+BAAA,kBAAwD;UAExDxC,EAAA,CAAAC,cAAA,YAAO;UAAAD,EAAA,CAAAE,MAAA,eAAQ;UAAAF,EAAA,CAAAG,YAAA,EAAQ;UACvBH,EAAA,CAAAsC,SAAA,gBAAkD;UAEnDtC,EAAA,CAAAC,cAAA,iBAAuD;UACtDD,EAAA,CAAAE,MAAA,iBACD;UAAAF,EAAA,CAAAG,YAAA,EAAS;;;UAbNH,EAAA,CAAAyC,UAAA,cAAAN,GAAA,CAAA3B,UAAA,CAAwB;UAMnBR,EAAA,CAAA0C,SAAA,GAAgB;UAAhB1C,EAAA,CAAAyC,UAAA,SAAAN,GAAA,CAAA3B,UAAA,CAAgB;UAKFR,EAAA,CAAA0C,SAAA,GAA+B;UAA/B1C,EAAA,CAAAyC,UAAA,aAAAN,GAAA,CAAA3B,UAAA,CAAAmC,OAAA,CAA+B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}