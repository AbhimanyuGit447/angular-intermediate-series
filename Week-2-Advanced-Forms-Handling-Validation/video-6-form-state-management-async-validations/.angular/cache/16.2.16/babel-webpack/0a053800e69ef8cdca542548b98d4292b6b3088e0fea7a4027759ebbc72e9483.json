{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction RegistrationFormComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"input\", 9);\n    i0.ɵɵelementStart(2, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function RegistrationFormComponent_div_15_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.removeAddress(i_r2));\n    });\n    i0.ɵɵtext(3, \"Remove\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class RegistrationFormComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.registrationForm = this.fb.group({\n      username: ['', [Validators.required, Validators.minLength(3)]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      addresses: this.fb.array([]) // dynmic address\n    });\n  }\n\n  onSubmit() {\n    console.log('Form Values', this.registrationForm.value);\n  }\n  get addresses() {\n    return this.registrationForm.get('addresses');\n  }\n  addAddress() {\n    this.addresses.push(this.fb.control(''));\n  }\n  removeAddress(index) {\n    this.addresses.removeAt(index);\n  }\n  static {\n    this.ɵfac = function RegistrationFormComponent_Factory(t) {\n      return new (t || RegistrationFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RegistrationFormComponent,\n      selectors: [[\"app-registration-form\"]],\n      decls: 18,\n      vars: 3,\n      consts: [[1, \"form-styling\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-field\"], [\"formControlName\", \"username\", \"type\", \"text\"], [\"formControlName\", \"email\"], [\"type\", \"password\", \"formControlName\", \"password\"], [\"formArrayName\", \"addresses\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 3, \"disabled\"], [\"formControlName\", \"i\", \"placeholder\", \"Enter address\"], [\"type\", \"button\", 3, \"click\"]],\n      template: function RegistrationFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function RegistrationFormComponent_Template_form_ngSubmit_1_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(2, \"div\", 2)(3, \"label\");\n          i0.ɵɵtext(4, \"Username\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(5, \"input\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"div\", 2)(7, \"label\");\n          i0.ɵɵtext(8, \"Email:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(9, \"input\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"div\", 2)(11, \"label\");\n          i0.ɵɵtext(12, \"Password:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(13, \"input\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"div\", 6);\n          i0.ɵɵtemplate(15, RegistrationFormComponent_div_15_Template, 4, 0, \"div\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"button\", 8);\n          i0.ɵɵtext(17, \"Register\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.registrationForm);\n          i0.ɵɵadvance(14);\n          i0.ɵɵproperty(\"ngForOf\", ctx.addresses.controls);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"disabled\", ctx.registrationForm.invalid);\n        }\n      },\n      dependencies: [i2.NgForOf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormArrayName],\n      styles: [\"form[_ngcontent-%COMP%] {\\n  max-width: 400px;\\n  margin: auto;\\n  display: flex;\\n  flex-direction: column;\\n  gap: 10px;\\n}\\n\\ninput[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 8px;\\n  margin: 5px 0;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  padding: 8px 12px;\\n  margin-top: 10px;\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9yZWdpc3RyYXRpb24tZm9ybS9yZWdpc3RyYXRpb24tZm9ybS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFBO0VBQ0EsWUFBQTtFQUNBLGFBQUE7RUFDQSxzQkFBQTtFQUNBLFNBQUE7QUFDSjs7QUFFRTtFQUNFLFdBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtBQUNKOztBQUVFO0VBQ0UsaUJBQUE7RUFDQSxnQkFBQTtFQUNBLGVBQUE7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbImZvcm0ge1xuICAgIG1heC13aWR0aDogNDAwcHg7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBnYXA6IDEwcHg7XG4gIH1cbiAgXG4gIGlucHV0IHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwYWRkaW5nOiA4cHg7XG4gICAgbWFyZ2luOiA1cHggMDtcbiAgfVxuICBcbiAgYnV0dG9uIHtcbiAgICBwYWRkaW5nOiA4cHggMTJweDtcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfVxuXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵelement","ɵɵlistener","RegistrationFormComponent_div_15_Template_button_click_2_listener","restoredCtx","ɵɵrestoreView","_r4","i_r2","index","ctx_r3","ɵɵnextContext","ɵɵresetView","removeAddress","ɵɵtext","ɵɵelementEnd","RegistrationFormComponent","constructor","fb","registrationForm","group","username","required","minLength","email","password","addresses","array","onSubmit","console","log","value","get","addAddress","push","control","removeAt","ɵɵdirectiveInject","i1","FormBuilder","selectors","decls","vars","consts","template","RegistrationFormComponent_Template","rf","ctx","RegistrationFormComponent_Template_form_ngSubmit_1_listener","ɵɵtemplate","RegistrationFormComponent_div_15_Template","ɵɵadvance","ɵɵproperty","controls","invalid"],"sources":["/Users/abhimanyusinghshaktawat/Desktop/advanced-component-demo/Week-2-Advanced-Forms-Handling-Validation/video-6-form-state-management-async-validations/src/app/components/registration-form/registration-form.component.ts","/Users/abhimanyusinghshaktawat/Desktop/advanced-component-demo/Week-2-Advanced-Forms-Handling-Validation/video-6-form-state-management-async-validations/src/app/components/registration-form/registration-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-registration-form',\n  templateUrl: './registration-form.component.html',\n  styleUrls: ['./registration-form.component.scss']\n})\nexport class RegistrationFormComponent {\n  registrationForm! : FormGroup;\n\n  constructor(private fb : FormBuilder){\n    this.registrationForm = this.fb.group({\n      username : ['', [Validators.required, Validators.minLength(3)]],\n      email : ['', [Validators.required, Validators.email]],\n      password : ['', [Validators.required, Validators.minLength(6)]],\n      addresses : this.fb.array([]) // dynmic address\n    })\n  }\n\n  onSubmit(){\n    console.log('Form Values', this.registrationForm.value);\n    \n  }\n\n  get addresses(){\n    return this.registrationForm.get('addresses') as FormArray;\n  }\n\n  addAddress(){\n    this.addresses.push(this.fb.control(''));\n  }\n\n  removeAddress(index : number){\n    this.addresses.removeAt(index);\n  }\n}\n","<div class=\"form-styling\">\n    <form [formGroup]=\"this.registrationForm\"  (ngSubmit)=\"onSubmit()\" >\n        <div class=\"form-field\">\n            <label>Username</label>\n            <input formControlName=\"username\" type=\"text\"/>\n        </div>\n      \n        <div class=\"form-field\">\n            <label>Email:</label>\n            <input formControlName=\"email\" />\n        </div>\n   \n        <div class=\"form-field\">\n            <label>Password:</label>\n            <input type=\"password\" formControlName=\"password\" />\n        </div>\n\n        <div formArrayName=\"addresses\">\n            <div *ngFor=\"let address of addresses.controls; let i = index\" >\n                <input formControlName=\"i\" placeholder=\"Enter address\">\n                <button type=\"button\" (click)=\"removeAddress(i)\" >Remove</button>\n            </div>\n\n        </div>\n    \n        \n        <button type=\"submit\" [disabled]=\"this.registrationForm.invalid\" >Register</button>\n    </form>\n</div>\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}