{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { usernameValidator } from 'src/app/validators/username.validator';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/auth.service.service\";\nimport * as i3 from \"@angular/common\";\nfunction RegistrationFormComponent_p_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p\", 11);\n  }\n}\nfunction RegistrationFormComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"input\", 12);\n    i0.ɵɵelementStart(2, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function RegistrationFormComponent_div_16_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const i_r3 = restoredCtx.index;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.removeAddress(i_r3));\n    });\n    i0.ɵɵtext(3, \"Remove\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const i_r3 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", i_r3);\n  }\n}\nexport class RegistrationFormComponent {\n  constructor(fb, authService) {\n    this.fb = fb;\n    this.authService = authService;\n    this.registrationForm = this.fb.group({\n      username: ['', [Validators.required, Validators.minLength(3)], [usernameValidator(this.authService)]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      addresses: this.fb.array([]) // dynmic address\n    });\n  }\n\n  onSubmit() {\n    console.log('Form Values', this.registrationForm.value);\n  }\n  get addresses() {\n    return this.registrationForm.get('addresses');\n  }\n  addAddress() {\n    this.addresses.push(this.fb.control(''));\n  }\n  removeAddress(index) {\n    this.addresses.removeAt(index);\n  }\n  static {\n    this.ɵfac = function RegistrationFormComponent_Factory(t) {\n      return new (t || RegistrationFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthServiceService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RegistrationFormComponent,\n      selectors: [[\"app-registration-form\"]],\n      decls: 21,\n      vars: 4,\n      consts: [[1, \"form-styling\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-field\"], [\"formControlName\", \"username\", \"type\", \"text\"], [\"style\", \"color: red;\", 4, \"ngIf\"], [\"formControlName\", \"email\"], [\"type\", \"password\", \"formControlName\", \"password\"], [\"formArrayName\", \"addresses\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 3, \"click\"], [\"type\", \"submit\", 3, \"disabled\"], [2, \"color\", \"red\"], [\"placeholder\", \"Enter address\", 3, \"formControlName\"]],\n      template: function RegistrationFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function RegistrationFormComponent_Template_form_ngSubmit_1_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(2, \"div\", 2)(3, \"label\");\n          i0.ɵɵtext(4, \"Username\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(5, \"input\", 3);\n          i0.ɵɵtemplate(6, RegistrationFormComponent_p_6_Template, 1, 0, \"p\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"div\", 2)(8, \"label\");\n          i0.ɵɵtext(9, \"Email:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(10, \"input\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"div\", 2)(12, \"label\");\n          i0.ɵɵtext(13, \"Password:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(14, \"input\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"div\", 7);\n          i0.ɵɵtemplate(16, RegistrationFormComponent_div_16_Template, 4, 1, \"div\", 8);\n          i0.ɵɵelementStart(17, \"button\", 9);\n          i0.ɵɵlistener(\"click\", function RegistrationFormComponent_Template_button_click_17_listener() {\n            return ctx.addAddress();\n          });\n          i0.ɵɵtext(18, \"Add\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(19, \"button\", 10);\n          i0.ɵɵtext(20, \"Register\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.registrationForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx.signupForm.get(\"email\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"emailtaken\"]);\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"ngForOf\", ctx.addresses.controls);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"disabled\", ctx.registrationForm.invalid);\n        }\n      },\n      dependencies: [i3.NgForOf, i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormArrayName],\n      styles: [\"form[_ngcontent-%COMP%] {\\n  max-width: 400px;\\n  margin: auto;\\n  display: flex;\\n  flex-direction: column;\\n  gap: 10px;\\n}\\n\\ninput[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 8px;\\n  margin: 5px 0;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  padding: 8px 12px;\\n  margin-top: 10px;\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9yZWdpc3RyYXRpb24tZm9ybS9yZWdpc3RyYXRpb24tZm9ybS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFBO0VBQ0EsWUFBQTtFQUNBLGFBQUE7RUFDQSxzQkFBQTtFQUNBLFNBQUE7QUFDSjs7QUFFRTtFQUNFLFdBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtBQUNKOztBQUVFO0VBQ0UsaUJBQUE7RUFDQSxnQkFBQTtFQUNBLGVBQUE7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbImZvcm0ge1xuICAgIG1heC13aWR0aDogNDAwcHg7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBnYXA6IDEwcHg7XG4gIH1cbiAgXG4gIGlucHV0IHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwYWRkaW5nOiA4cHg7XG4gICAgbWFyZ2luOiA1cHggMDtcbiAgfVxuICBcbiAgYnV0dG9uIHtcbiAgICBwYWRkaW5nOiA4cHggMTJweDtcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfVxuXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","usernameValidator","i0","ɵɵelement","ɵɵelementStart","ɵɵlistener","RegistrationFormComponent_div_16_Template_button_click_2_listener","restoredCtx","ɵɵrestoreView","_r5","i_r3","index","ctx_r4","ɵɵnextContext","ɵɵresetView","removeAddress","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","RegistrationFormComponent","constructor","fb","authService","registrationForm","group","username","required","minLength","email","password","addresses","array","onSubmit","console","log","value","get","addAddress","push","control","removeAt","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthServiceService","selectors","decls","vars","consts","template","RegistrationFormComponent_Template","rf","ctx","RegistrationFormComponent_Template_form_ngSubmit_1_listener","ɵɵtemplate","RegistrationFormComponent_p_6_Template","RegistrationFormComponent_div_16_Template","RegistrationFormComponent_Template_button_click_17_listener","tmp_1_0","signupForm","errors","controls","invalid"],"sources":["/Users/abhimanyusinghshaktawat/Desktop/advanced-component-demo/Week-2-Advanced-Forms-Handling-Validation/video-6-form-state-management-async-validations/src/app/components/registration-form/registration-form.component.ts","/Users/abhimanyusinghshaktawat/Desktop/advanced-component-demo/Week-2-Advanced-Forms-Handling-Validation/video-6-form-state-management-async-validations/src/app/components/registration-form/registration-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthServiceService } from 'src/app/services/auth.service.service';\nimport { usernameValidator } from 'src/app/validators/username.validator';\n\n@Component({\n  selector: 'app-registration-form',\n  templateUrl: './registration-form.component.html',\n  styleUrls: ['./registration-form.component.scss']\n})\nexport class RegistrationFormComponent {\n  registrationForm! : FormGroup;\n\n  constructor(private fb : FormBuilder, private authService : AuthServiceService){\n    this.registrationForm = this.fb.group({\n      username : ['', [Validators.required, Validators.minLength(3)], [usernameValidator(this.authService)] ],\n      email : ['', [Validators.required, Validators.email]],\n      password : ['', [Validators.required, Validators.minLength(6)]],\n      addresses : this.fb.array([]) // dynmic address\n    })\n  }\n\n  onSubmit(){\n    console.log('Form Values', this.registrationForm.value);\n    \n  }\n\n  get addresses(){\n    return this.registrationForm.get('addresses') as FormArray;\n  }\n\n  addAddress(){\n    this.addresses.push(this.fb.control(''));\n  }\n\n  removeAddress(index : number){\n    this.addresses.removeAt(index);\n  }\n}\n","<div class=\"form-styling\">\n    <form [formGroup]=\"this.registrationForm\"  (ngSubmit)=\"onSubmit()\" >\n        <div class=\"form-field\">\n            <label>Username</label>\n            <input formControlName=\"username\" type=\"text\"/>\n            <p style=\"color: red;\" *ngIf=\"signupForm.get('email')?.errors?.['emailtaken']\" ></p>\n        </div>\n      \n        <div class=\"form-field\">\n            <label>Email:</label>\n            <input formControlName=\"email\" />\n        </div>\n   \n        <div class=\"form-field\">\n            <label>Password:</label>\n            <input type=\"password\" formControlName=\"password\" />\n        </div>\n\n        <div formArrayName=\"addresses\">\n            <div *ngFor=\"let address of addresses.controls; let i = index\" >\n                <input [formControlName]=\"i\" placeholder=\"Enter address\">\n                <button type=\"button\" (click)=\"removeAddress(i)\" >Remove</button>\n            </div>\n\n            <button type=\"button\" (click)=\"addAddress()\" >Add</button>\n\n        </div>\n    \n        \n        <button type=\"submit\" [disabled]=\"this.registrationForm.invalid\" >Register</button>\n    </form>\n</div>\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}