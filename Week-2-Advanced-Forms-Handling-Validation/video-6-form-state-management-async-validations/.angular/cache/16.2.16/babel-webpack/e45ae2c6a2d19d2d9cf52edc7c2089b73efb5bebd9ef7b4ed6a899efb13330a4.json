{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { emailValidator } from 'src/app/validators/email.validator';\nimport { strongPasswordValidator } from 'src/app/validators/password.validator';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/auth.service.service\";\nexport class SignupComponent {\n  constructor(fb, authService) {\n    this.fb = fb;\n    this.authService = authService;\n    this.signupForm = this.fb.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email], [emailValidator(authService)]],\n      password: ['', [Validators.required, Validators.minLength(6), strongPasswordValidator]]\n    });\n  }\n  a() {\n    console.log(this.signupForm.get('email')?.errors);\n  }\n  onSubmit() {\n    if (this.signupForm.valid) {\n      console.log('Form Submitted', this.signupForm.value);\n    }\n  }\n  static {\n    this.ɵfac = function SignupComponent_Factory(t) {\n      return new (t || SignupComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthServiceService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SignupComponent,\n      selectors: [[\"app-signup\"]],\n      decls: 14,\n      vars: 2,\n      consts: [[3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"formControlName\", \"name\"], [\"type\", \"email\", \"formControlName\", \"email\"], [\"type\", \"password\", \"formControlName\", \"password\"], [\"type\", \"submit\", 3, \"disabled\"]],\n      template: function SignupComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function SignupComponent_Template_form_ngSubmit_0_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(1, \"label\");\n          i0.ɵɵtext(2, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(3, \"input\", 1);\n          i0.ɵɵelementStart(4, \"label\");\n          i0.ɵɵtext(5, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(6, \"input\", 2);\n          i0.ɵɵelementStart(7, \"span\");\n          i0.ɵɵtext(8, \"Email is already taken!\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"label\");\n          i0.ɵɵtext(10, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"input\", 3);\n          i0.ɵɵelementStart(12, \"button\", 4);\n          i0.ɵɵtext(13, \" Sign Up \");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"formGroup\", ctx.signupForm);\n          i0.ɵɵadvance(12);\n          i0.ɵɵproperty(\"disabled\", ctx.signupForm.invalid);\n        }\n      },\n      dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","emailValidator","strongPasswordValidator","SignupComponent","constructor","fb","authService","signupForm","group","name","required","email","password","minLength","a","console","log","get","errors","onSubmit","valid","value","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthServiceService","selectors","decls","vars","consts","template","SignupComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","SignupComponent_Template_form_ngSubmit_0_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty","ɵɵadvance","invalid"],"sources":["/Users/abhimanyusinghshaktawat/Desktop/advanced-component-demo/Week-2-Advanced-Forms-Handling-Validation/video-4-Custom-Validators-in-Angular-Reactive-Forms/src/app/components/signup/signup.component.ts","/Users/abhimanyusinghshaktawat/Desktop/advanced-component-demo/Week-2-Advanced-Forms-Handling-Validation/video-4-Custom-Validators-in-Angular-Reactive-Forms/src/app/components/signup/signup.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthServiceService } from 'src/app/services/auth.service.service';\nimport { emailValidator } from 'src/app/validators/email.validator';\nimport { strongPasswordValidator } from 'src/app/validators/password.validator';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent {\n  signupForm! : FormGroup;\n\n  constructor(private fb : FormBuilder, private authService : AuthServiceService){\n    this.signupForm = this.fb.group({\n      name : ['', Validators.required],\n      email : ['', [Validators.required, Validators.email], [emailValidator(authService)] ],\n      password : ['', [Validators.required, Validators.minLength(6), strongPasswordValidator]]\n    })\n  }\n\n  a(){\n    console.log(this.signupForm.get('email')?.errors);\n  }\n  \n  onSubmit(){\n    if(this.signupForm.valid){\n      console.log('Form Submitted', this.signupForm.value);\n      \n    }\n  }\n}\n","<form [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\">\n    <label>Name</label>\n    <input type=\"text\" formControlName=\"name\" >\n\n    <label>Email</label>\n    <input type=\"email\" formControlName=\"email\">\n    <span>Email is already taken!</span>\n\n    <label>Password</label>\n    <input type=\"password\" formControlName=\"password\">\n\n   <button type=\"submit\" [disabled]=\"signupForm.invalid\" >\n    Sign Up\n   </button>\n\n</form>"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;AAEnE,SAASC,cAAc,QAAQ,oCAAoC;AACnE,SAASC,uBAAuB,QAAQ,uCAAuC;;;;AAO/E,OAAM,MAAOC,eAAe;EAG1BC,YAAoBC,EAAgB,EAAUC,WAAgC;IAA1D,KAAAD,EAAE,GAAFA,EAAE;IAAwB,KAAAC,WAAW,GAAXA,WAAW;IACvD,IAAI,CAACC,UAAU,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC9BC,IAAI,EAAG,CAAC,EAAE,EAAET,UAAU,CAACU,QAAQ,CAAC;MAChCC,KAAK,EAAG,CAAC,EAAE,EAAE,CAACX,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACW,KAAK,CAAC,EAAE,CAACV,cAAc,CAACK,WAAW,CAAC,CAAC,CAAE;MACrFM,QAAQ,EAAG,CAAC,EAAE,EAAE,CAACZ,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACa,SAAS,CAAC,CAAC,CAAC,EAAEX,uBAAuB,CAAC;KACxF,CAAC;EACJ;EAEAY,CAACA,CAAA;IACCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,UAAU,CAACU,GAAG,CAAC,OAAO,CAAC,EAAEC,MAAM,CAAC;EACnD;EAEAC,QAAQA,CAAA;IACN,IAAG,IAAI,CAACZ,UAAU,CAACa,KAAK,EAAC;MACvBL,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAACT,UAAU,CAACc,KAAK,CAAC;;EAGxD;;;uBApBWlB,eAAe,EAAAmB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,kBAAA;IAAA;EAAA;;;YAAfxB,eAAe;MAAAyB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCX5BZ,EAAA,CAAAc,cAAA,cAAuD;UAAxBd,EAAA,CAAAe,UAAA,sBAAAC,kDAAA;YAAA,OAAYH,GAAA,CAAAhB,QAAA,EAAU;UAAA,EAAC;UAClDG,EAAA,CAAAc,cAAA,YAAO;UAAAd,EAAA,CAAAiB,MAAA,WAAI;UAAAjB,EAAA,CAAAkB,YAAA,EAAQ;UACnBlB,EAAA,CAAAmB,SAAA,eAA2C;UAE3CnB,EAAA,CAAAc,cAAA,YAAO;UAAAd,EAAA,CAAAiB,MAAA,YAAK;UAAAjB,EAAA,CAAAkB,YAAA,EAAQ;UACpBlB,EAAA,CAAAmB,SAAA,eAA4C;UAC5CnB,EAAA,CAAAc,cAAA,WAAM;UAAAd,EAAA,CAAAiB,MAAA,8BAAuB;UAAAjB,EAAA,CAAAkB,YAAA,EAAO;UAEpClB,EAAA,CAAAc,cAAA,YAAO;UAAAd,EAAA,CAAAiB,MAAA,gBAAQ;UAAAjB,EAAA,CAAAkB,YAAA,EAAQ;UACvBlB,EAAA,CAAAmB,SAAA,gBAAkD;UAEnDnB,EAAA,CAAAc,cAAA,iBAAuD;UACtDd,EAAA,CAAAiB,MAAA,iBACD;UAAAjB,EAAA,CAAAkB,YAAA,EAAS;;;UAbNlB,EAAA,CAAAoB,UAAA,cAAAP,GAAA,CAAA5B,UAAA,CAAwB;UAWLe,EAAA,CAAAqB,SAAA,IAA+B;UAA/BrB,EAAA,CAAAoB,UAAA,aAAAP,GAAA,CAAA5B,UAAA,CAAAqC,OAAA,CAA+B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}