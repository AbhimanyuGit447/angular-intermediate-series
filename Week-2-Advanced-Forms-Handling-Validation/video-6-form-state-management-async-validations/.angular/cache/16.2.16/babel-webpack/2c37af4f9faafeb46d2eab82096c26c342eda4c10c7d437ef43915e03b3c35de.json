{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class DataService {\n  constructor() {\n    this.messageSource = new BehaviorSubject('initial message');\n    this.currentMessage = this.messageSource.asObservable();\n  }\n  //method to update our message\n  updateMessage(message) {\n    this.messageSource.next(message);\n  }\n  static {\n    this.ɵfac = function DataService_Factory(t) {\n      return new (t || DataService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: DataService,\n      factory: DataService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","DataService","constructor","messageSource","currentMessage","asObservable","updateMessage","message","next","factory","ɵfac","providedIn"],"sources":["/Users/abhimanyusinghshaktawat/Desktop/advanced-component-demo/Week-2-Advanced-Forms-Handling-Validation/video-6-form-state-management-async-validations/src/app/services/data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor() { }\n\n  private messageSource = new BehaviorSubject<string>('initial message')\n\n  currentMessage : Observable<string> = this.messageSource.asObservable();\n\n  //method to update our message\n\n  updateMessage(message : string){\n    this.messageSource.next(message);\n  }\n}\n"],"mappings":"AACA,SAASA,eAAe,QAAoB,MAAM;;AAKlD,OAAM,MAAOC,WAAW;EAEtBC,YAAA;IAEQ,KAAAC,aAAa,GAAG,IAAIH,eAAe,CAAS,iBAAiB,CAAC;IAEtE,KAAAI,cAAc,GAAwB,IAAI,CAACD,aAAa,CAACE,YAAY,EAAE;EAJvD;EAMhB;EAEAC,aAAaA,CAACC,OAAgB;IAC5B,IAAI,CAACJ,aAAa,CAACK,IAAI,CAACD,OAAO,CAAC;EAClC;;;uBAZWN,WAAW;IAAA;EAAA;;;aAAXA,WAAW;MAAAQ,OAAA,EAAXR,WAAW,CAAAS,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}