{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction DynamicFormComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"label\");\n    i0.ɵɵtext(2, \"Street\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 4);\n    i0.ɵɵelementStart(4, \"label\");\n    i0.ɵɵtext(5, \"City\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 5);\n    i0.ɵɵelementStart(7, \"label\");\n    i0.ɵɵtext(8, \"Zip\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 6);\n    i0.ɵɵelementStart(10, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function DynamicFormComponent_div_2_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.removeAddress(i_r2));\n    });\n    i0.ɵɵtext(11, \"Remove\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const i_r2 = ctx.index;\n    i0.ɵɵproperty(\"formGroupName\", i_r2);\n  }\n}\nexport class DynamicFormComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.form = this.fb.group({\n      addresses: this.fb.array([])\n    });\n    this.addAddress();\n    // add\n    //remove\n  }\n\n  get addresses() {\n    return this.form.get('addresses');\n  }\n  addAddress() {\n    const addressGroup = this.fb.group({\n      street: ['', Validators.required],\n      city: ['', Validators.required],\n      zip: ['', [Validators.required, Validators.pattern('^[0-9]{5}$')]]\n    });\n    this.addresses.push(addressGroup);\n  }\n  removeAddress(index) {\n    this.addresses.removeAt(index);\n  }\n  submit() {\n    console.log('form data', this.form.value);\n  }\n  static {\n    this.ɵfac = function DynamicFormComponent_Factory(t) {\n      return new (t || DynamicFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DynamicFormComponent,\n      selectors: [[\"app-dynamic-form\"]],\n      decls: 3,\n      vars: 2,\n      consts: [[3, \"formGroup\", \"ngSubmit\"], [\"formArrayName\", \"addresses\"], [3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [3, \"formGroupName\"], [\"type\", \"text\", \"formControlName\", \"street\"], [\"type\", \"text\", \"formControlName\", \"city\"], [\"type\", \"text\", \"formControlName\", \"zip\"], [\"type\", \"button\", 3, \"click\"]],\n      template: function DynamicFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function DynamicFormComponent_Template_form_ngSubmit_0_listener() {\n            return ctx.submit();\n          });\n          i0.ɵɵelementStart(1, \"div\", 1);\n          i0.ɵɵtemplate(2, DynamicFormComponent_div_2_Template, 12, 1, \"div\", 2);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"formGroup\", ctx.form);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.addresses.controls);\n        }\n      },\n      dependencies: [i2.NgForOf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","DynamicFormComponent_div_2_Template_button_click_10_listener","restoredCtx","ɵɵrestoreView","_r4","i_r2","index","ctx_r3","ɵɵnextContext","ɵɵresetView","removeAddress","ɵɵproperty","DynamicFormComponent","constructor","fb","form","group","addresses","array","addAddress","get","addressGroup","street","required","city","zip","pattern","push","removeAt","submit","console","log","value","ɵɵdirectiveInject","i1","FormBuilder","selectors","decls","vars","consts","template","DynamicFormComponent_Template","rf","ctx","DynamicFormComponent_Template_form_ngSubmit_0_listener","ɵɵtemplate","DynamicFormComponent_div_2_Template","ɵɵadvance","controls"],"sources":["/Users/abhimanyusinghshaktawat/Desktop/advanced-component-demo/Week-2-Advanced-Forms-Handling-Validation/video-5-Dynamically-adding-form-control/src/app/components/dynamic-form/dynamic-form.component.ts","/Users/abhimanyusinghshaktawat/Desktop/advanced-component-demo/Week-2-Advanced-Forms-Handling-Validation/video-5-Dynamically-adding-form-control/src/app/components/dynamic-form/dynamic-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-dynamic-form',\n  templateUrl: './dynamic-form.component.html',\n  styleUrls: ['./dynamic-form.component.scss']\n})\nexport class DynamicFormComponent {\n\n  form! : FormGroup;\n\n  constructor(private fb : FormBuilder){\n    this.form = this.fb.group({\n      addresses : this.fb.array([]), \n    })\n\n    this.addAddress();\n\n    // add\n    //remove\n \n  }\n\n  get addresses() : FormArray {\n    return this.form.get('addresses') as FormArray;\n  }\n\n  addAddress(){\n    const addressGroup = this.fb.group({\n      street : ['', Validators.required],\n      city : ['', Validators.required],\n      zip : ['', [Validators.required, Validators.pattern('^[0-9]{5}$')]],\n    })\n\n    this.addresses.push(addressGroup);\n\n  }\n\n  removeAddress(index : number){\n    this.addresses.removeAt(index);\n  }\n\n  submit(){\n    console.log('form data', this.form.value);\n    \n  }\n\n\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n    <div formArrayName=\"addresses\" >\n        <div *ngFor=\"let address of addresses.controls; let i = index\" [formGroupName]=\"i\"  >\n            <label>Street</label>\n            <input type=\"text\" formControlName=\"street\" >\n\n            <label>City</label>\n            <input type=\"text\" formControlName=\"city\" >\n\n            <label>Zip</label>\n            <input type=\"text\" formControlName=\"zip\" >\n\n            <button type=\"button\" (click)=\"removeAddress(i)\" >Remove</button>\n        </div>\n    </div>\n\n    \n</form>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}