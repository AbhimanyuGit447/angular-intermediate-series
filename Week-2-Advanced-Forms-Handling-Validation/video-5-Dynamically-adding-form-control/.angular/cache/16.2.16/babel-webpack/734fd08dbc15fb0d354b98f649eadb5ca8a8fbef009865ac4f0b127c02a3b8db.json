{"ast":null,"code":"import { TextQuestionComponent } from '../components/text-question/text-question.component';\nimport { MultipleChoiceComponent } from '../components/multiple-choice/multiple-choice.component';\nimport { DropdownQuestionComponent } from '../components/dropdown-question/dropdown-question.component';\nimport * as i0 from \"@angular/core\";\nexport class SurveyServiceService {\n  setContainer(viewContainerRef) {\n    this.containerRef = viewContainerRef;\n  }\n  loadQuestion(type, question, options = []) {\n    this.containerRef.clear();\n    let componentRef;\n    if (type === 'text') {\n      componentRef = this.containerRef.createComponent(TextQuestionComponent);\n    } else if (type === 'multiple') {\n      componentRef = this.containerRef.createComponent(MultipleChoiceComponent);\n    } else {\n      componentRef = this.containerRef.createComponent(DropdownQuestionComponent);\n    }\n    componentRef.instance.question = question;\n    if (options.length) {\n      componentRef.instance.options = options;\n    }\n  }\n  constructor() {}\n  static {\n    this.ɵfac = function SurveyServiceService_Factory(t) {\n      return new (t || SurveyServiceService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: SurveyServiceService,\n      factory: SurveyServiceService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["TextQuestionComponent","MultipleChoiceComponent","DropdownQuestionComponent","SurveyServiceService","setContainer","viewContainerRef","containerRef","loadQuestion","type","question","options","clear","componentRef","createComponent","instance","length","constructor","factory","ɵfac","providedIn"],"sources":["/Users/abhimanyusinghshaktawat/Desktop/advanced-component-demo/Week-2-Advanced-Forms-Handling-Validation/video-5-Dynamically-adding-form-control/src/app/services/survey-service.service.ts"],"sourcesContent":["import { ComponentRef, Injectable, ViewContainerRef } from '@angular/core';\nimport { TextQuestionComponent } from '../components/text-question/text-question.component';\nimport { MultipleChoiceComponent } from '../components/multiple-choice/multiple-choice.component';\nimport { DropdownComponent } from '../shared/dropdown/dropdown.component';\nimport { DropdownQuestionComponent } from '../components/dropdown-question/dropdown-question.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SurveyServiceService {\n\n  private containerRef! : ViewContainerRef;\n\n  setContainer(viewContainerRef : ViewContainerRef){\n    this.containerRef = viewContainerRef;\n  }\n\n  loadQuestion( type : 'text' | 'multiple' | 'dropdown', question : string, options : string[] = [] ){\n    this.containerRef.clear();\n    let componentRef : ComponentRef<any>;\n\n    if(type === 'text'){\n      componentRef = this.containerRef.createComponent(TextQuestionComponent);\n    }else if(type === 'multiple'){\n      componentRef = this.containerRef.createComponent(MultipleChoiceComponent);\n    }else{\n      componentRef = this.containerRef.createComponent(DropdownQuestionComponent);\n    }\n\n    componentRef.instance.question = question;\n\n    if(options.length){\n      componentRef.instance.options = options;\n    }\n\n  }\n\n  constructor() { }\n}\n"],"mappings":"AACA,SAASA,qBAAqB,QAAQ,qDAAqD;AAC3F,SAASC,uBAAuB,QAAQ,yDAAyD;AAEjG,SAASC,yBAAyB,QAAQ,6DAA6D;;AAKvG,OAAM,MAAOC,oBAAoB;EAI/BC,YAAYA,CAACC,gBAAmC;IAC9C,IAAI,CAACC,YAAY,GAAGD,gBAAgB;EACtC;EAEAE,YAAYA,CAAEC,IAAuC,EAAEC,QAAiB,EAAEC,OAAA,GAAqB,EAAE;IAC/F,IAAI,CAACJ,YAAY,CAACK,KAAK,EAAE;IACzB,IAAIC,YAAgC;IAEpC,IAAGJ,IAAI,KAAK,MAAM,EAAC;MACjBI,YAAY,GAAG,IAAI,CAACN,YAAY,CAACO,eAAe,CAACb,qBAAqB,CAAC;KACxE,MAAK,IAAGQ,IAAI,KAAK,UAAU,EAAC;MAC3BI,YAAY,GAAG,IAAI,CAACN,YAAY,CAACO,eAAe,CAACZ,uBAAuB,CAAC;KAC1E,MAAI;MACHW,YAAY,GAAG,IAAI,CAACN,YAAY,CAACO,eAAe,CAACX,yBAAyB,CAAC;;IAG7EU,YAAY,CAACE,QAAQ,CAACL,QAAQ,GAAGA,QAAQ;IAEzC,IAAGC,OAAO,CAACK,MAAM,EAAC;MAChBH,YAAY,CAACE,QAAQ,CAACJ,OAAO,GAAGA,OAAO;;EAG3C;EAEAM,YAAA,GAAgB;;;uBA5BLb,oBAAoB;IAAA;EAAA;;;aAApBA,oBAAoB;MAAAc,OAAA,EAApBd,oBAAoB,CAAAe,IAAA;MAAAC,UAAA,EAFnB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}