{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let DynamicFormComponent = class DynamicFormComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.form = this.fb.group({\n      addresses: this.fb.array([])\n    });\n    this.addAddress();\n    // add\n    //remove\n  }\n\n  get addresses() {\n    return this.form.get('addresses');\n  }\n  addAddress() {\n    const addressGroup = this.fb.group({\n      street: ['', Validators.required],\n      city: ['', Validators.required],\n      zip: ['', [Validators.required, Validators.pattern('^[0-9]{5}$')]]\n    });\n    this.addresses.push(addressGroup);\n  }\n  removeAddress(index) {\n    this.addresses.removeAt(index);\n  }\n  submit() {\n    console.log('form data', this.form.value);\n  }\n};\nDynamicFormComponent = __decorate([Component({\n  selector: 'app-dynamic-form',\n  templateUrl: './dynamic-form.component.html',\n  styleUrls: ['./dynamic-form.component.scss']\n})], DynamicFormComponent);","map":{"version":3,"names":["Component","Validators","DynamicFormComponent","constructor","fb","form","group","addresses","array","addAddress","get","addressGroup","street","required","city","zip","pattern","push","removeAddress","index","removeAt","submit","console","log","value","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/abhimanyusinghshaktawat/Desktop/advanced-component-demo/Week-2-Advanced-Forms-Handling-Validation/video-5-Dynamically-adding-form-control/src/app/components/dynamic-form/dynamic-form.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-dynamic-form',\n  templateUrl: './dynamic-form.component.html',\n  styleUrls: ['./dynamic-form.component.scss']\n})\nexport class DynamicFormComponent {\n\n  form! : FormGroup;\n\n  constructor(private fb : FormBuilder){\n    this.form = this.fb.group({\n      addresses : this.fb.array([]), \n    })\n\n    this.addAddress();\n\n    // add\n    //remove\n \n  }\n\n  get addresses() : FormArray {\n    return this.form.get('addresses') as FormArray;\n  }\n\n  addAddress(){\n    const addressGroup = this.fb.group({\n      street : ['', Validators.required],\n      city : ['', Validators.required],\n      zip : ['', [Validators.required, Validators.pattern('^[0-9]{5}$')]],\n    })\n\n    this.addresses.push(addressGroup);\n\n  }\n\n  removeAddress(index : number){\n    this.addresses.removeAt(index);\n  }\n\n  submit(){\n    console.log('form data', this.form.value);\n    \n  }\n\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAA4CC,UAAU,QAAQ,gBAAgB;AAOvE,WAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAI/BC,YAAoBC,EAAgB;IAAhB,KAAAA,EAAE,GAAFA,EAAE;IACpB,IAAI,CAACC,IAAI,GAAG,IAAI,CAACD,EAAE,CAACE,KAAK,CAAC;MACxBC,SAAS,EAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC,EAAE;KAC7B,CAAC;IAEF,IAAI,CAACC,UAAU,EAAE;IAEjB;IACA;EAEF;;EAEA,IAAIF,SAASA,CAAA;IACX,OAAO,IAAI,CAACF,IAAI,CAACK,GAAG,CAAC,WAAW,CAAc;EAChD;EAEAD,UAAUA,CAAA;IACR,MAAME,YAAY,GAAG,IAAI,CAACP,EAAE,CAACE,KAAK,CAAC;MACjCM,MAAM,EAAG,CAAC,EAAE,EAAEX,UAAU,CAACY,QAAQ,CAAC;MAClCC,IAAI,EAAG,CAAC,EAAE,EAAEb,UAAU,CAACY,QAAQ,CAAC;MAChCE,GAAG,EAAG,CAAC,EAAE,EAAE,CAACd,UAAU,CAACY,QAAQ,EAAEZ,UAAU,CAACe,OAAO,CAAC,YAAY,CAAC,CAAC;KACnE,CAAC;IAEF,IAAI,CAACT,SAAS,CAACU,IAAI,CAACN,YAAY,CAAC;EAEnC;EAEAO,aAAaA,CAACC,KAAc;IAC1B,IAAI,CAACZ,SAAS,CAACa,QAAQ,CAACD,KAAK,CAAC;EAChC;EAEAE,MAAMA,CAAA;IACJC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAClB,IAAI,CAACmB,KAAK,CAAC;EAE3C;CAGD;AAzCYtB,oBAAoB,GAAAuB,UAAA,EALhCzB,SAAS,CAAC;EACT0B,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,C,EACW1B,oBAAoB,CAyChC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}